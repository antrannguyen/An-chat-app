[{"/Users/antran/Documents/CODE/AN/An-chat-app/client/src/App.js":"1","/Users/antran/Documents/CODE/AN/An-chat-app/client/src/pages/Register.js":"2","/Users/antran/Documents/CODE/AN/An-chat-app/client/src/index.js":"3","/Users/antran/Documents/CODE/AN/An-chat-app/client/src/ApolloProvider.js":"4","/Users/antran/Documents/CODE/AN/An-chat-app/client/src/pages/Login.js":"5","/Users/antran/Documents/CODE/AN/An-chat-app/client/src/context/auth.js":"6","/Users/antran/Documents/CODE/AN/An-chat-app/client/src/util/DynamicRoute.js":"7","/Users/antran/Documents/CODE/AN/An-chat-app/client/src/pages/home/Home.js":"8","/Users/antran/Documents/CODE/AN/An-chat-app/client/src/pages/home/Users.js":"9"},{"size":861,"mtime":1611240651893,"results":"10","hashOfConfig":"11"},{"size":3123,"mtime":1610062080495,"results":"12","hashOfConfig":"11"},{"size":192,"mtime":1610055821559,"results":"13","hashOfConfig":"11"},{"size":795,"mtime":1611241766525,"results":"14","hashOfConfig":"11"},{"size":2738,"mtime":1611254967292,"results":"15","hashOfConfig":"11"},{"size":1792,"mtime":1611240258154,"results":"16","hashOfConfig":"11"},{"size":421,"mtime":1611240321255,"results":"17","hashOfConfig":"11"},{"size":2661,"mtime":1611320722283,"results":"18","hashOfConfig":"11"},{"size":1289,"mtime":1611320992463,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1taoine",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/antran/Documents/CODE/AN/An-chat-app/client/src/App.js",[],"/Users/antran/Documents/CODE/AN/An-chat-app/client/src/pages/Register.js",[],"/Users/antran/Documents/CODE/AN/An-chat-app/client/src/index.js",[],["40","41"],"/Users/antran/Documents/CODE/AN/An-chat-app/client/src/ApolloProvider.js",[],"/Users/antran/Documents/CODE/AN/An-chat-app/client/src/pages/Login.js",[],"/Users/antran/Documents/CODE/AN/An-chat-app/client/src/context/auth.js",[],"/Users/antran/Documents/CODE/AN/An-chat-app/client/src/util/DynamicRoute.js",[],"/Users/antran/Documents/CODE/AN/An-chat-app/client/src/pages/home/Home.js",["42","43","44","45"],"import React, { useEffect, useState, Fragment } from \"react\";\nimport { Row, Col, Button, Image } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { gql, useQuery, useLazyQuery } from \"@apollo/client\";\n\nimport { useAuthDispatch } from \"../../context/auth\";\nimport Users from \"./Users\";\n\nconst GET_USERS = gql`\n\tquery getUsers {\n\t\tgetUsers {\n\t\t\tusername\n\t\t\tcreatedAt\n\t\t\timageUrl\n\t\t\tlatestMessage {\n\t\t\t\tuuid\n\t\t\t\tfrom\n\t\t\t\tto\n\t\t\t\tcontent\n\t\t\t\tcreatedAt\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst GET_MESSAGES = gql`\n\tquery getMessages($from: String!) {\n\t\tgetMessages(from: $from) {\n\t\t\tuuid\n\t\t\tfrom\n\t\t\tto\n\t\t\tcontent\n\t\t\tcreatedAt\n\t\t}\n\t}\n`;\n\nexport default function Home({ history }) {\n\tconst dispatch = useAuthDispatch();\n\tconst [selectedUser, setSelectedUser] = useState(null);\n\n\tconst logout = () => {\n\t\tdispatch({ type: \"LOGOUT\" });\n\t\thistory.push(\"/login\");\n\t};\n\n\tconst { loading, data, error } = useQuery(GET_USERS);\n\n\tconst [\n\t\tgetMessages,\n\t\t{ loading: messagesLoading, data: messagesData },\n\t] = useLazyQuery(GET_MESSAGES);\n\n\tuseEffect(() => {\n\t\tif (selectedUser) {\n\t\t\tgetMessages({ variables: { from: selectedUser } });\n\t\t}\n\t}, [selectedUser]);\n\n\tif (messagesData) console.log(messagesData.getMessages);\n\n\tlet usersMarkup;\n\tif (!data || loading) {\n\t\tusersMarkup = <p>Loading..</p>;\n\t} else if (data.getUsers.length === 0) {\n\t\tusersMarkup = <p>No users have joined yet</p>;\n\t} else if (data.getUsers.length > 0) {\n\t\tusersMarkup = data.getUsers.map((user) => (\n\t\t\t<div\n\t\t\t\tclassName=\"d-flex p-3\"\n\t\t\t\tkey={user.username}\n\t\t\t\tonClick={() => setSelectedUser(user.username)}\n\t\t\t>\n\t\t\t\t<Image\n\t\t\t\t\tsrc={user.imageUrl}\n\t\t\t\t\troundedCircle\n\t\t\t\t\tclassName=\"mr-2\"\n\t\t\t\t\tstyle={{ width: 50, height: 50, objectFit: \"cover\" }}\n\t\t\t\t/>\n\t\t\t\t<div>\n\t\t\t\t\t<p className=\"text-success\">{user.username}</p>\n\t\t\t\t\t<p className=\"font-weight-light\">\n\t\t\t\t\t\t{user.latestMessage\n\t\t\t\t\t\t\t? user.latestMessage.content\n\t\t\t\t\t\t\t: \"You are now connected!\"}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t));\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Row className=\"bg-white justify-content-around mb-1\">\n\t\t\t\t<Link to=\"/login\">\n\t\t\t\t\t<Button variant=\"link\">Login</Button>\n\t\t\t\t</Link>\n\t\t\t\t<Link to=\"/register\">\n\t\t\t\t\t<Button variant=\"link\">Register</Button>\n\t\t\t\t</Link>\n\t\t\t\t<Button variant=\"link\" onClick={logout}>\n\t\t\t\t\tLogout\n\t\t\t\t</Button>\n\t\t\t</Row>\n\t\t\t<Row className=\"bg-white\">\n\t\t\t\t<Users setSelectedUser={setSelectedUser} />\n\t\t\t\t{/* <ChatContent /> */}\n\t\t\t\t<Col xs={8}>\n\t\t\t\t\t{messagesData && messagesData.getMessages.length > 0 ? (\n\t\t\t\t\t\tmessagesData.getMessages.map((message) => (\n\t\t\t\t\t\t\t<p key={message.uuid}>{message.content}</p>\n\t\t\t\t\t\t))\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p>Messages</p>\n\t\t\t\t\t)}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Fragment>\n\t);\n}\n","/Users/antran/Documents/CODE/AN/An-chat-app/client/src/pages/home/Users.js",["46"],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":47,"column":25,"nodeType":"53","messageId":"54","endLine":47,"endColumn":30},{"ruleId":"51","severity":1,"message":"55","line":51,"column":14,"nodeType":"53","messageId":"54","endLine":51,"endColumn":29},{"ruleId":"56","severity":1,"message":"57","line":58,"column":5,"nodeType":"58","endLine":58,"endColumn":19,"suggestions":"59"},{"ruleId":"51","severity":1,"message":"60","line":68,"column":3,"nodeType":"53","messageId":"54","endLine":68,"endColumn":14},{"ruleId":"51","severity":1,"message":"52","line":23,"column":25,"nodeType":"53","messageId":"54","endLine":23,"endColumn":30},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'messagesLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMessages'. Either include it or remove the dependency array.","ArrayExpression",["63"],"'usersMarkup' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},"Update the dependencies array to be: [getMessages, selectedUser]",{"range":"66","text":"67"},[1131,1145],"[getMessages, selectedUser]"]